{"ast":null,"code":"var _jsxFileName = \"/Users/c.barrios/Documents/c.barrios/project/Notes/React-JS/section-7-practice-react/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport Header from './components/Header';\nimport InputForm from './components/InputForm';\nimport Table from './components/Table';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [yearlyData, setYearlyData] = useState([]);\n  const calculateHandler = userInput => {\n    userInput.preventDefault();\n    console.log('fod');\n    // Should be triggered when form is submitted\n    // You might not directly want to bind it to the submit event on the form though...\n\n    const yearlyData = []; // per-year results\n\n    let currentSavings = +userInput.target['current-savings'].value; // feel free to change the shape of this input object!\n    const yearlyContribution = +userInput.target['yearly-contribution'].value; // as mentioned: feel free to change the shape...\n    const expectedReturn = +userInput.target['expected-return'].value / 100;\n    const duration = +userInput.target['duration'].value;\n\n    // The below code calculates yearly results (total savings, interest etc)\n    for (let i = 0; i < duration; i++) {\n      const yearlyInterest = currentSavings * expectedReturn;\n      currentSavings += yearlyInterest + yearlyContribution;\n      // yearlyData.push({\n      //   // feel free to change the shape of the data pushed to the array!\n\n      // });\n      setYearlyData(prevData => [...prevData, {\n        year: i + 1,\n        yearlyInterest: yearlyInterest,\n        savingsEndOfYear: currentSavings,\n        yearlyContribution: yearlyContribution\n      }]);\n    }\n    console.log(yearlyData);\n    // do something with yearlyData ...\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputForm, {\n      calculateHandler: calculateHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), yearlyData.length < 1 ? '' : /*#__PURE__*/_jsxDEV(Table, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 38\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"L2hTGYim4KbKSMBTHo5ostNJKu4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Header","InputForm","Table","jsxDEV","_jsxDEV","App","_s","yearlyData","setYearlyData","calculateHandler","userInput","preventDefault","console","log","currentSavings","target","value","yearlyContribution","expectedReturn","duration","i","yearlyInterest","prevData","year","savingsEndOfYear","children","fileName","_jsxFileName","lineNumber","columnNumber","length","_c","$RefreshReg$"],"sources":["/Users/c.barrios/Documents/c.barrios/project/Notes/React-JS/section-7-practice-react/src/App.js"],"sourcesContent":["import {useState} from 'react'\nimport Header from './components/Header';\nimport InputForm from './components/InputForm';\nimport Table from './components/Table';\n\nfunction App() {\n  \n  const [yearlyData, setYearlyData] = useState([])\n\n  const calculateHandler = (userInput) => {\n    userInput.preventDefault()\n    console.log('fod')\n    // Should be triggered when form is submitted\n    // You might not directly want to bind it to the submit event on the form though...\n\n    const yearlyData = []; // per-year results\n\n    let currentSavings = +userInput.target['current-savings'].value; // feel free to change the shape of this input object!\n    const yearlyContribution = +userInput.target['yearly-contribution'].value; // as mentioned: feel free to change the shape...\n    const expectedReturn = +userInput.target['expected-return'].value / 100;\n    const duration = +userInput.target['duration'].value;\n\n    // The below code calculates yearly results (total savings, interest etc)\n    for (let i = 0; i < duration; i++) {\n      const yearlyInterest = currentSavings * expectedReturn;\n      currentSavings += yearlyInterest + yearlyContribution;\n      // yearlyData.push({\n      //   // feel free to change the shape of the data pushed to the array!\n        \n      // });\n      setYearlyData(prevData => [...prevData, {year: i + 1,\n        yearlyInterest: yearlyInterest,\n        savingsEndOfYear: currentSavings,\n        yearlyContribution: yearlyContribution,}])\n    }\n    console.log(yearlyData)\n    // do something with yearlyData ...\n  };\n\n  return (\n    <div>\n      <Header/>\n      <InputForm calculateHandler={calculateHandler}/>\n      {/* Todo: Show below table conditionally (only once result data is available) */}\n      {/* Show fallback text if no data is available */}\n      {\n        yearlyData.length < 1 ? '' : <Table/>\n      }\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAAQA,QAAQ,QAAO,OAAO;AAC9B,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,KAAK,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAMU,gBAAgB,GAAIC,SAAS,IAAK;IACtCA,SAAS,CAACC,cAAc,CAAC,CAAC;IAC1BC,OAAO,CAACC,GAAG,CAAC,KAAK,CAAC;IAClB;IACA;;IAEA,MAAMN,UAAU,GAAG,EAAE,CAAC,CAAC;;IAEvB,IAAIO,cAAc,GAAG,CAACJ,SAAS,CAACK,MAAM,CAAC,iBAAiB,CAAC,CAACC,KAAK,CAAC,CAAC;IACjE,MAAMC,kBAAkB,GAAG,CAACP,SAAS,CAACK,MAAM,CAAC,qBAAqB,CAAC,CAACC,KAAK,CAAC,CAAC;IAC3E,MAAME,cAAc,GAAG,CAACR,SAAS,CAACK,MAAM,CAAC,iBAAiB,CAAC,CAACC,KAAK,GAAG,GAAG;IACvE,MAAMG,QAAQ,GAAG,CAACT,SAAS,CAACK,MAAM,CAAC,UAAU,CAAC,CAACC,KAAK;;IAEpD;IACA,KAAK,IAAII,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,QAAQ,EAAEC,CAAC,EAAE,EAAE;MACjC,MAAMC,cAAc,GAAGP,cAAc,GAAGI,cAAc;MACtDJ,cAAc,IAAIO,cAAc,GAAGJ,kBAAkB;MACrD;MACA;;MAEA;MACAT,aAAa,CAACc,QAAQ,IAAI,CAAC,GAAGA,QAAQ,EAAE;QAACC,IAAI,EAAEH,CAAC,GAAG,CAAC;QAClDC,cAAc,EAAEA,cAAc;QAC9BG,gBAAgB,EAAEV,cAAc;QAChCG,kBAAkB,EAAEA;MAAmB,CAAC,CAAC,CAAC;IAC9C;IACAL,OAAO,CAACC,GAAG,CAACN,UAAU,CAAC;IACvB;EACF,CAAC;;EAED,oBACEH,OAAA;IAAAqB,QAAA,gBACErB,OAAA,CAACJ,MAAM;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACTzB,OAAA,CAACH,SAAS;MAACQ,gBAAgB,EAAEA;IAAiB;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,EAI9CtB,UAAU,CAACuB,MAAM,GAAG,CAAC,GAAG,EAAE,gBAAG1B,OAAA,CAACF,KAAK;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEpC,CAAC;AAEV;AAACvB,EAAA,CA7CQD,GAAG;AAAA0B,EAAA,GAAH1B,GAAG;AA+CZ,eAAeA,GAAG;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}