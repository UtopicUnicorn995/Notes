1. React is a Component-Driven User Interfaces
2. React is a JS library for building user Interfaces
3. What is exactly a component -> all user Interfaces are made of components
    -> Reusesable building blocks in your user interface -> components are in the end, combinations of HTML, CSS, JS
4. React split big chunks of code into smaller readable functions
5. React uses declarative approach
    -> You will always define the desired target state
    -> React's job to figure out the actual JS DOM instructions
    -> Makes Developer's job easier

React
-> Index.js is the first file that gets loaded

-> Good and best practice to put new component on a different file
-> A component in react is just a javascript function


Naming convention:
-> Capitalize
-> Lowercased elements are built-in components/elements while Capitalized are custom components


Rule
-> One root element per component
-> Wrap all in a div or <></>
-> use className -> class keyword is a reserved word

Why Components?
-> Reuseability
    -> Don't repeat yourself
-> Separation of concerns
    -> Don't do too many things in one and the same place (function)


Props(KEY CONCEPT)
-> We can mak our contents reuseable by using the parameters and a concept called props
-> We can pass data to the custom component by adding an attribute
-> We're basically creating our own custom basic HTML element
-> Data should be recieved from outside 
-> Alternative of setting props
-> pass an object to a component
-> Use object destructuring

-> Good practice to keep component small and readable

React(LIFTING STATE UP)
-> We can only communicate from child to parent or parent to child